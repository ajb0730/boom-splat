{
  "{\"filename\":\"/app/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/index.js",
      "filenameRelative": "/app/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "// pull in libraries\nconst app = require('express')();\nconst http = require('http').Server(app);\nconst server = require('socket.io')(http);\nconst _ = require('lodash');\n\nconst Player = require('./player');\nconst Board = require('./board');\n\n// pull in system config\nconst port = process.env.PORT || 3000;\n\n/*\n * HTTP Routing\n */\n\n// proxy the Blockly code from the service itself\napp.get('/blockly/*', function (req, res) {\n  res.sendFile(__dirname + '/node_modules/' + req.path);\n});\n\n// serve the client page from the root\napp.get('/', function (req, res) {\n  res.sendFile(__dirname + '/index.html');\n});\n\n/*\n * Server Code\n */\n\n// server-wide globals\nlet clientId = 0; // unique client id\nlet players = []; // list of players\nlet boardId = 0; // unique board id\nlet boards = []; // list of active boards\n\n// accept new connections from the client\nvar main = server.of('/');\n\nmain.on('connection', function (client) {\n  // client-wide globals\n  let player;\n  let playerId;\n\n  // player has connected and is ready to start editing\n  client.on('auth', (opts, cb) => {\n    // 'opts' contains the name data from the client, 'cb' is how we send a message back to the client\n    playerId = ++clientId;\n    player = new Player(_.assign({\n      id: playerId,\n      name: 'Player ' + playerId,\n      score: 0,\n      tagged: 0\n    }, opts));\n    players.push(player);\n\n    client.player = player;\n\n    console.log('[%s] has joined', player.name);\n    server.emit('status', '[' + player.id + '] <font color=\"red\">' + player.name + '</font> has joined.');\n\n    cb(player);\n  });\n\n  // player is in editing and wants to test their robot; put them in a 'private' board and start it running\n  client.on('test', () => {\n    var board = new Board({ id: ++boardId, server: server });\n    client.join(board.channel());\n    board.addPlayer(player);\n    boards.push(board);\n    client.board = board;\n    board.run();\n  });\n\n  // player is in test and wants to go back to editing\n  client.on('stop', () => {\n    var board = client.board;\n    board.removePlayer(player);\n    client.leave(board.channel());\n    if (board.numPlayers() === 0) {\n      board.stop();\n      _.remove(boards, function (b) {\n        return b.id === board.id;\n      });\n    }\n    delete client.board;\n  });\n\n  // player is in editing and wants to go to the arena (compete against other robots)\n  client.on('play', () => {\n    // if no open board, create a new one\n    // or, add player to existing open board\n  });\n\n  // player is in the arena and wants to go back to editing\n  client.on('leave', () => {});\n\n  // player has left entirely\n  client.on('disconnect', () => {\n    _.remove(players, function (p) {\n      return p.id === player.id;\n    });\n    console.log('[%s] has left', player.name);\n    server.emit('status', '[' + player.id + '] <font color=\"red\">' + player.name + '</font> has left.');\n    if (client.hasOwnProperty('board')) {\n      var board = client.board;\n      board.removePlayer(player);\n      if (board.numPlayers() === 0) {\n        _.remove(function (b) {\n          return b.id === board.id;\n        });\n      }\n    }\n  });\n});\n\n/*\n * Start Service\n */\nhttp.listen(port, function () {\n  console.log('listening on *:%d', port);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "require",
        "http",
        "Server",
        "server",
        "_",
        "Player",
        "Board",
        "port",
        "process",
        "env",
        "PORT",
        "get",
        "req",
        "res",
        "sendFile",
        "__dirname",
        "path",
        "clientId",
        "players",
        "boardId",
        "boards",
        "main",
        "of",
        "on",
        "client",
        "player",
        "playerId",
        "opts",
        "cb",
        "assign",
        "id",
        "name",
        "score",
        "tagged",
        "push",
        "console",
        "log",
        "emit",
        "board",
        "join",
        "channel",
        "addPlayer",
        "run",
        "removePlayer",
        "leave",
        "numPlayers",
        "stop",
        "remove",
        "b",
        "p",
        "hasOwnProperty",
        "listen"
      ],
      "mappings": "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",
      "file": "index.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "// pull in libraries\nconst app = require('express')()\nconst http = require('http').Server(app)\nconst server = require('socket.io')(http)\nconst _ = require('lodash')\n\nconst Player = require('./player')\nconst Board = require('./board')\n\n// pull in system config\nconst port = process.env.PORT || 3000\n\n/*\n * HTTP Routing\n */\n\n// proxy the Blockly code from the service itself\napp.get('/blockly/*', function (req,res){\n    res.sendFile(__dirname + '/node_modules/' + req.path)  \n})\n\n// serve the client page from the root\napp.get('/', function (req,res){\n    res.sendFile(__dirname + '/index.html')\n})\n\n/*\n * Server Code\n */\n\n// server-wide globals\nlet clientId = 0   // unique client id\nlet players = []   // list of players\nlet boardId = 0    // unique board id\nlet boards = []    // list of active boards\n\n// accept new connections from the client\nvar main = server.of('/')\n\nmain.on('connection', function (client){\n  // client-wide globals\n  let player\n  let playerId\n    \n  // player has connected and is ready to start editing\n  client.on('auth', (opts, cb) => {  // 'opts' contains the name data from the client, 'cb' is how we send a message back to the client\n    playerId = ++clientId\n    player = new Player(_.assign({\n      id: playerId,\n      name: 'Player ' + playerId,\n      score: 0,\n      tagged: 0,\n    }, opts))\n    players.push(player)\n    \n    client.player = player\n\n    console.log('[%s] has joined', player.name)\n    server.emit('status', '[' + player.id + '] <font color=\"red\">' + player.name + '</font> has joined.')\n    \n    cb(player)\n  })\n  \n  // player is in editing and wants to test their robot; put them in a 'private' board and start it running\n  client.on('test', () => {\n    var board = new Board({id: ++boardId, server: server})\n    client.join(board.channel())\n    board.addPlayer(player)\n    boards.push(board)\n    client.board = board\n    board.run()\n  })\n  \n  // player is in test and wants to go back to editing\n  client.on('stop', () => {\n    var board = client.board\n    board.removePlayer(player)\n    client.leave(board.channel())\n    if(board.numPlayers() === 0){\n      board.stop()\n      _.remove(boards,function(b){return b.id === board.id})\n    }\n    delete client.board\n  })\n  \n  // player is in editing and wants to go to the arena (compete against other robots)\n  client.on('play', () => {\n    // if no open board, create a new one\n    // or, add player to existing open board\n  })\n  \n  // player is in the arena and wants to go back to editing\n  client.on('leave', () => {\n    \n  })  \n  \n  // player has left entirely\n  client.on('disconnect', () => {\n    _.remove(players,function (p) {\n      return p.id === player.id\n    })\n    console.log('[%s] has left', player.name)\n    server.emit('status', '[' + player.id + '] <font color=\"red\">' + player.name + '</font> has left.')\n    if(client.hasOwnProperty('board')){\n      var board = client.board\n      board.removePlayer(player)\n      if(board.numPlayers() === 0){\n        _.remove(function(b){return b.id === board.id})\n      }\n    }\n  })\n})\n\n/*\n * Start Service\n */\nhttp.listen(port, function(){\n    console.log('listening on *:%d', port)\n})\n"
      ]
    },
    "mtime": 1493082349623
  },
  "{\"filename\":\"/app/player.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/player.js",
      "filenameRelative": "/app/player.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "player.js",
      "sourceFileName": "player.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "player"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nconst _ = require('lodash');\n\nclass Player {\n  constructor(options) {\n    _.assign(this, options);\n    return this;\n  }\n}\n\nmodule.exports = Player;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsYXllci5qcyJdLCJuYW1lcyI6WyJfIiwicmVxdWlyZSIsIlBsYXllciIsImNvbnN0cnVjdG9yIiwib3B0aW9ucyIsImFzc2lnbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLE1BQU1BLElBQUlDLFFBQVEsUUFBUixDQUFWOztBQUVBLE1BQU1DLE1BQU4sQ0FBYTtBQUNYQyxjQUFZQyxPQUFaLEVBQXFCO0FBQ25CSixNQUFFSyxNQUFGLENBQVMsSUFBVCxFQUFlRCxPQUFmO0FBQ0EsV0FBTyxJQUFQO0FBQ0Q7QUFKVTs7QUFPYkUsT0FBT0MsT0FBUCxHQUFpQkwsTUFBakIiLCJmaWxlIjoicGxheWVyLmpzIiwic291cmNlUm9vdCI6Ii9hcHAiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIlxuXG5jb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoJylcblxuY2xhc3MgUGxheWVyIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIF8uYXNzaWduKHRoaXMsIG9wdGlvbnMpXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFBsYXllciJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "player.js"
      ],
      "names": [
        "_",
        "require",
        "Player",
        "constructor",
        "options",
        "assign",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,IAAIC,QAAQ,QAAR,CAAV;;AAEA,MAAMC,MAAN,CAAa;AACXC,cAAYC,OAAZ,EAAqB;AACnBJ,MAAEK,MAAF,CAAS,IAAT,EAAeD,OAAf;AACA,WAAO,IAAP;AACD;AAJU;;AAObE,OAAOC,OAAP,GAAiBL,MAAjB",
      "file": "player.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "\"use strict\"\n\nconst _ = require('lodash')\n\nclass Player {\n  constructor(options) {\n    _.assign(this, options)\n    return this\n  }\n}\n\nmodule.exports = Player"
      ]
    },
    "mtime": 1493077737819
  },
  "{\"filename\":\"/app/board.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/board.js",
      "filenameRelative": "/app/board.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "board.js",
      "sourceFileName": "board.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "board"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nconst _ = require('lodash');\nconst util = require('util');\nconst sleep = require('./sleep');\n\nconst DIRECTION = {\n  north: 0,\n  east: 1,\n  south: 2,\n  west: 3\n};\n\nconst CARDINAL = ['North', 'East', 'South', 'West'];\n\nclass Board {\n  constructor(options) {\n    this.players = [];\n    this.size = 25;\n    //    this.winner = 3\n    this.open = false;\n    _.assign(this, options);\n    return this;\n  }\n\n  channel() {\n    return 'board-' + this.id;\n  }\n\n  broadcast(event, data) {\n    this.server.to(this.channel()).emit(event, data);\n  }\n\n  update(player) {\n    this.broadcast('update', player);\n  }\n\n  refresh() {\n    var me = this;\n    //console.log(me.players)\n    _.forEach(me.players, function (p) {\n      me.update(p);\n    });\n  }\n\n  hasPlayer(player) {\n    return _.find(this.players, function (p) {\n      return p.id === player.id;\n    });\n  }\n\n  numPlayers() {\n    return this.players.length;\n  }\n\n  addPlayer(player) {\n    player.tagged = 0;\n    player.score = 0;\n    player.direction = _.random(DIRECTION.north, DIRECTION.west);\n    player.directionStr = CARDINAL[player.direction];\n    do {\n      player.x = _.random(0, this.size - 1);\n      player.y = _.random(0, this.size - 1);\n    } while (this.isCellOccupied(player.x, player.y));\n    player.channel = this.channel();\n    this.players.push(player);\n    this.refresh();\n    return player;\n  }\n\n  removePlayer(player) {\n    if (this.hasPlayer(player)) {\n      _.remove(this.players, p => {\n        return p.id === player.id;\n      });\n      delete player.channel;\n      this.broadcast('remove', player);\n    }\n  }\n\n  isCellOccupied(x, y) {\n    return _.find(this.players, function (p) {\n      return p.x === x && p.y === y;\n    });\n  }\n\n  turnLeft(player) {\n    //console.log('start: x %d y %d d %s', player.x, player.y, player.directionStr)\n    player.direction -= 1;\n    if (player.direction < DIRECTION.north) {\n      player.direction = DIRECTION.west;\n    }\n    player.directionStr = CARDINAL[player.direction];\n    this.update(player);\n    //console.log('  end: x %d y %d d %s', player.x, player.y, player.directionStr)\n    return true;\n  }\n\n  turnRight(player) {\n    //console.log('start: x %d y %d d %s', player.x, player.y, player.directionStr)\n    player.direction += 1;\n    if (player.direction > DIRECTION.west) {\n      player.direction = DIRECTION.north;\n    }\n    player.directionStr = CARDINAL[player.direction];\n    this.update(player);\n    //console.log('  end: x %d y %d d %s', player.x, player.y, player.directionStr)\n    return true;\n  }\n\n  moveForward(player) {\n    var x = player.x;\n    var y = player.y;\n    //console.log('start: x %d y %d d %s', player.x, player.y, player.directionStr)\n    switch (player.direction) {\n      case DIRECTION.north:\n        y += 1;\n        break;\n      case DIRECTION.east:\n        x += 1;\n        break;\n      case DIRECTION.south:\n        y -= 1;\n        break;\n      case DIRECTION.west:\n        x -= 1;\n        break;\n    }\n    if (x < 0 || x >= this.size || y < 0 || y >= this.size || this.isCellOccupied(x, y)) {\n      //console.log('rejected')\n      return false;\n    }\n    player.x = x;\n    player.y = y;\n    //console.log('  end: x %d y %d d %s', player.x, player.y, player.directionStr)    \n    this.update(player);\n    return true;\n  }\n\n  tag(player) {\n    var x = player.x;\n    var y = player.y;\n    switch (player.direction) {\n      case DIRECTION.north:\n        y += 1;\n        break;\n      case DIRECTION.east:\n        x += 1;\n        break;\n      case DIRECTION.south:\n        y -= 1;\n        break;\n      case DIRECTION.west:\n        x -= 1;\n        break;\n    }\n    //console.log('  tag: x %d y %d d %s', x, y, player.directionStr)\n    var target = this.isCellOccupied(x, y);\n    if (target) {\n      target.tagged += 1;\n      player.score += 1;\n      //console.log(util.format('[%s] was tagged by [%s]!', target.name, player.name))\n      this.update(target);\n      this.update(player);\n      this.broadcast('status', util.format('[%s] was tagged by [%s]!', target.name, player.name));\n      /*\n      if(player.score >= this.winner){\n        this.broadcast('winner',player)\n        console.log(util.format('[%s] has won!', player.name))\n      }\n      */\n      return true;\n    }\n    return false;\n  }\n\n  // returns 0 if there are no bots in a straight line in front of where bot is facing\n  // otherwise, returns number of 'moveForward' commands to bring bot to next bot\n  /*\n  distanceToBot(player){\n  }\n  */\n\n  // returns number of 'moveForward' commands to next wall\n  distanceToWall(player) {\n    var result = -1;\n    switch (player.direction) {\n      case DIRECTION.north:\n        result = this.size - 1 - player.y;\n        break;\n      case DIRECTION.east:\n        result = this.size - 1 - player.x;\n        break;\n      case DIRECTION.south:\n        result = player.y;\n        break;\n      case DIRECTION.west:\n        result = player.x;\n        break;\n    }\n    console.log('Distance to wall for (%d,%d) is %d', player.x, player.y, result);\n    return result;\n  }\n\n  run() {\n    this.loop = true;\n    this.done = false;\n    this._run();\n    var timer;\n    timer = setInterval(() => {\n      if (!this.loop) {\n        clearInterval(timer);\n      } else if (this.done === true) {\n        this.done = false;\n        this._run();\n      }\n    }, 100);\n  }\n\n  _run() {\n    var me = this;\n    var commands = [];\n\n    var sockets_in_room = me.server.nsps['/'].adapter.rooms[me.channel()];\n    var promises = [];\n    var status = {};\n    for (var socketId in sockets_in_room.sockets) {\n      var client = me.server.sockets.connected[socketId];\n      if (client.hasOwnProperty('player')) {\n        //console.log('request command from [%s] at %s',client.player.name,socketId)\n        status[client.id] = undefined;\n        var promise = new Promise((resolve, reject) => {\n          client.emit('request command', me.channel(), command => {\n            commands.push({ player: client.player, command: command, client: client });\n            status[client.id].status = true;\n            resolve(1);\n          });\n          setTimeout(() => {\n            status[client.id].status = false;\n            reject(client.player);\n          }, 500);\n        });\n        promises.push(promise);\n        status[client.id] = { status: undefined, promise: promise };\n      }\n    }\n    Promise.all(promises).then(() => {\n      var responses = 0;\n      _.forEach(commands, function (cmd) {\n        var result = false;\n        responses += 1;\n        switch (cmd.command) {\n          case 'turn left':\n            result = me.turnLeft(cmd.player);\n            break;\n          case 'turn right':\n            result = me.turnRight(cmd.player);\n            break;\n          case 'move forward':\n            result = me.moveForward(cmd.player);\n            break;\n          case 'tag':\n            result = me.tag(cmd.player);\n            break;\n          case 'distance to wall':\n            result = me.distanceToWall(cmd.player);\n            break;\n          default:\n            console.log('Unrecognized command \\'%s\\' from [%s]', cmd.command, cmd.player.name);\n        }\n        //console.log('responses %d of %d', responses, promises.length)\n        if (responses === promises.length) {\n          me.done = true;\n        }\n        cmd.client.emit('result', { command: cmd.command, result: result });\n      });\n    }).catch(player => {\n      console.log('Timeout waiting for [%s] to respond', player.name);\n      me.done = true;\n    });\n  }\n\n  stop() {\n    this.loop = false;\n  }\n}\n\nmodule.exports = Board;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "board.js"
      ],
      "names": [
        "_",
        "require",
        "util",
        "sleep",
        "DIRECTION",
        "north",
        "east",
        "south",
        "west",
        "CARDINAL",
        "Board",
        "constructor",
        "options",
        "players",
        "size",
        "open",
        "assign",
        "channel",
        "id",
        "broadcast",
        "event",
        "data",
        "server",
        "to",
        "emit",
        "update",
        "player",
        "refresh",
        "me",
        "forEach",
        "p",
        "hasPlayer",
        "find",
        "numPlayers",
        "length",
        "addPlayer",
        "tagged",
        "score",
        "direction",
        "random",
        "directionStr",
        "x",
        "y",
        "isCellOccupied",
        "push",
        "removePlayer",
        "remove",
        "turnLeft",
        "turnRight",
        "moveForward",
        "tag",
        "target",
        "format",
        "name",
        "distanceToWall",
        "result",
        "console",
        "log",
        "run",
        "loop",
        "done",
        "_run",
        "timer",
        "setInterval",
        "clearInterval",
        "commands",
        "sockets_in_room",
        "nsps",
        "adapter",
        "rooms",
        "promises",
        "status",
        "socketId",
        "sockets",
        "client",
        "connected",
        "hasOwnProperty",
        "undefined",
        "promise",
        "Promise",
        "resolve",
        "reject",
        "command",
        "setTimeout",
        "all",
        "then",
        "responses",
        "cmd",
        "catch",
        "stop",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "board.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "\"use strict\"\n\nconst _ = require('lodash')\nconst util = require('util')\nconst sleep = require('./sleep')\n\nconst DIRECTION = {\n  north: 0,\n  east: 1,\n  south: 2,\n  west: 3\n}\n\nconst CARDINAL = [\n  'North',\n  'East',\n  'South',\n  'West'\n]\n\nclass Board {\n  constructor(options) {\n    this.players = []\n    this.size = 25\n//    this.winner = 3\n    this.open = false\n    _.assign(this, options)\n    return this\n  }\n  \n  channel(){\n    return 'board-' + this.id\n  }\n\n  broadcast(event,data){\n    this.server.to(this.channel()).emit(event,data)\n  }\n\n  update(player){\n    this.broadcast('update',player)\n  }\n  \n  refresh() {\n    var me = this\n    //console.log(me.players)\n    _.forEach(me.players, function(p) { me.update(p) })\n  }\n\n  hasPlayer(player){\n    return _.find(this.players, function(p) { return p.id === player.id })\n  }\n  \n  numPlayers() {\n    return this.players.length\n  }\n  \n  addPlayer(player){\n    player.tagged = 0\n    player.score = 0\n    player.direction = _.random(DIRECTION.north,DIRECTION.west)\n    player.directionStr = CARDINAL[player.direction]\n    do {\n      player.x = _.random(0, this.size-1)\n      player.y = _.random(0, this.size-1)\n    } while(this.isCellOccupied(player.x,player.y))\n    player.channel = this.channel()\n    this.players.push(player)\n    this.refresh()\n    return player\n  }\n  \n  removePlayer(player){\n    if(this.hasPlayer(player)){\n      _.remove(this.players,(p) => { return p.id === player.id })\n      delete player.channel\n      this.broadcast('remove',player)\n    }\n  }\n                   \n  isCellOccupied(x,y){\n    return _.find(this.players,function(p) { return p.x === x && p.y === y })\n  }\n  \n  turnLeft(player){\n    //console.log('start: x %d y %d d %s', player.x, player.y, player.directionStr)\n    player.direction -= 1\n    if(player.direction < DIRECTION.north) {\n      player.direction = DIRECTION.west\n    }\n    player.directionStr = CARDINAL[player.direction]\n    this.update(player)\n    //console.log('  end: x %d y %d d %s', player.x, player.y, player.directionStr)\n    return true\n  }\n  \n  turnRight(player){\n    //console.log('start: x %d y %d d %s', player.x, player.y, player.directionStr)\n    player.direction += 1\n    if(player.direction > DIRECTION.west) {\n      player.direction = DIRECTION.north\n    }\n    player.directionStr = CARDINAL[player.direction]\n    this.update(player)\n    //console.log('  end: x %d y %d d %s', player.x, player.y, player.directionStr)\n    return true\n  }\n  \n  moveForward(player){\n    var x = player.x\n    var y = player.y\n    //console.log('start: x %d y %d d %s', player.x, player.y, player.directionStr)\n    switch(player.direction){\n      case DIRECTION.north:\n        y += 1\n        break\n      case DIRECTION.east:\n        x += 1\n        break\n      case DIRECTION.south:\n        y -= 1\n        break\n      case DIRECTION.west:\n        x -= 1\n        break;\n    }\n    if(x<0 || x >= this.size || y < 0 || y >= this.size || this.isCellOccupied(x,y)){\n      //console.log('rejected')\n      return false\n    }\n    player.x = x\n    player.y = y\n    //console.log('  end: x %d y %d d %s', player.x, player.y, player.directionStr)    \n    this.update(player)\n    return true\n  }\n  \n  tag(player){\n    var x = player.x\n    var y = player.y\n    switch(player.direction){\n      case DIRECTION.north:\n        y += 1\n        break\n      case DIRECTION.east:\n        x += 1\n        break\n      case DIRECTION.south:\n        y -= 1\n        break\n      case DIRECTION.west:\n        x -= 1\n        break;\n    }\n    //console.log('  tag: x %d y %d d %s', x, y, player.directionStr)\n    var target = this.isCellOccupied(x,y)\n    if(target){\n      target.tagged += 1\n      player.score += 1\n      //console.log(util.format('[%s] was tagged by [%s]!', target.name, player.name))\n      this.update(target)\n      this.update(player)\n      this.broadcast('status',util.format('[%s] was tagged by [%s]!', target.name, player.name))\n      /*\n      if(player.score >= this.winner){\n        this.broadcast('winner',player)\n        console.log(util.format('[%s] has won!', player.name))\n      }\n      */\n      return true\n    }\n    return false\n  }\n  \n  // returns 0 if there are no bots in a straight line in front of where bot is facing\n  // otherwise, returns number of 'moveForward' commands to bring bot to next bot\n  /*\n  distanceToBot(player){\n  }\n  */\n  \n  // returns number of 'moveForward' commands to next wall\n  distanceToWall(player){\n    var result = -1\n    switch(player.direction){\n      case DIRECTION.north:\n        result = this.size - 1 - player.y;\n        break;\n      case DIRECTION.east:\n        result = this.size - 1 - player.x;\n        break;\n      case DIRECTION.south:\n        result = player.y;\n        break;\n      case DIRECTION.west:\n        result = player.x;\n        break;\n    }\n    console.log('Distance to wall for (%d,%d) is %d', player.x, player.y, result)\n    return result\n  }\n  \n  run(){\n    this.loop = true\n    this.done = false\n    this._run()\n    var timer\n    timer = setInterval(() => {\n      if(!this.loop) {\n        clearInterval(timer)\n      } else if(this.done === true) { \n        this.done = false\n        this._run()\n      }\n    }, 100)\n  }\n    \n  _run(){\n    var me = this\n    var commands = []\n      \n    var sockets_in_room = me.server.nsps['/'].adapter.rooms[me.channel()]\n    var promises = []\n    var status = {}\n    for (var socketId in sockets_in_room.sockets) {\n      var client = me.server.sockets.connected[socketId]\n      if(client.hasOwnProperty('player')){\n        //console.log('request command from [%s] at %s',client.player.name,socketId)\n        status[client.id] = undefined\n        var promise = new Promise((resolve,reject) => {\n          client.emit('request command',me.channel(),(command) => {\n            commands.push({player: client.player, command: command, client: client})\n            status[client.id].status = true\n            resolve(1)\n          })\n          setTimeout(() => {\n            status[client.id].status = false\n            reject(client.player) \n          },500)\n        })\n        promises.push(promise)\n        status[client.id] = {status: undefined, promise: promise}\n      }        \n    }\n    Promise.all(promises).then(() => {\n      var responses = 0\n      _.forEach(commands,function(cmd){\n        var result = false\n        responses += 1\n        switch(cmd.command){\n          case 'turn left':\n            result = me.turnLeft(cmd.player)\n            break;\n          case 'turn right':\n            result = me.turnRight(cmd.player)\n            break;\n          case 'move forward':\n            result = me.moveForward(cmd.player)\n            break;\n          case 'tag':\n            result = me.tag(cmd.player)\n            break;\n          case 'distance to wall':\n            result = me.distanceToWall(cmd.player)\n            break;\n          default:\n            console.log('Unrecognized command \\'%s\\' from [%s]', cmd.command, cmd.player.name)\n        }\n        //console.log('responses %d of %d', responses, promises.length)\n        if(responses === promises.length){\n          me.done = true\n        }\n        cmd.client.emit('result',{command: cmd.command, result: result})        \n      })\n    })\n    .catch((player) => {\n      console.log('Timeout waiting for [%s] to respond', player.name)\n      me.done = true\n    })\n  }\n\n  stop(){\n    this.loop = false\n  }\n}\n\nmodule.exports = Board"
      ]
    },
    "mtime": 1493085761577
  },
  "{\"filename\":\"/app/sleep.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/sleep.js",
      "filenameRelative": "/app/sleep.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "sleep.js",
      "sourceFileName": "sleep.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "sleep"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nmodule.exports.sleep = (() => {\n  var _ref = _asyncToGenerator(function* (ms) {\n    var sleep = new Promise(function (resolve) {\n      return setTimeout(resolve, ms);\n    });\n    yield sleep;\n  });\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNsZWVwLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzbGVlcCIsIm1zIiwiUHJvbWlzZSIsInNldFRpbWVvdXQiLCJyZXNvbHZlIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUVBQSxPQUFPQyxPQUFQLENBQWVDLEtBQWY7QUFBQSwrQkFBdUIsV0FBZUMsRUFBZixFQUFtQjtBQUN4QyxRQUFJRCxRQUFRLElBQUlFLE9BQUosQ0FBWTtBQUFBLGFBQVdDLFdBQVdDLE9BQVgsRUFBbUJILEVBQW5CLENBQVg7QUFBQSxLQUFaLENBQVo7QUFDQSxVQUFNRCxLQUFOO0FBQ0QsR0FIRDs7QUFBQTtBQUFBO0FBQUE7QUFBQSIsImZpbGUiOiJzbGVlcC5qcyIsInNvdXJjZVJvb3QiOiIvYXBwIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCJcblxubW9kdWxlLmV4cG9ydHMuc2xlZXAgPSBhc3luYyBmdW5jdGlvbihtcykge1xuICB2YXIgc2xlZXAgPSBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSxtcykpXG4gIGF3YWl0IHNsZWVwXG59Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "sleep.js"
      ],
      "names": [
        "module",
        "exports",
        "sleep",
        "ms",
        "Promise",
        "setTimeout",
        "resolve"
      ],
      "mappings": "AAAA;;;;AAEAA,OAAOC,OAAP,CAAeC,KAAf;AAAA,+BAAuB,WAAeC,EAAf,EAAmB;AACxC,QAAID,QAAQ,IAAIE,OAAJ,CAAY;AAAA,aAAWC,WAAWC,OAAX,EAAmBH,EAAnB,CAAX;AAAA,KAAZ,CAAZ;AACA,UAAMD,KAAN;AACD,GAHD;;AAAA;AAAA;AAAA;AAAA",
      "file": "sleep.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "\"use strict\"\n\nmodule.exports.sleep = async function(ms) {\n  var sleep = new Promise(resolve => setTimeout(resolve,ms))\n  await sleep\n}"
      ]
    },
    "mtime": 1493081701934
  }
}